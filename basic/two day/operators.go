package main

import "fmt"

/*

+	相加
-	相减
*	相乘
/	相除
%	求余
++	自增
--	自减

==	检查两个值是否相等，如果相等返回 True 否则返回 False。
!=	检查两个值是否不相等，如果不相等返回 True 否则返回 False。
>	检查左边值是否大于右边值，如果是返回 True 否则返回 False。
<	检查左边值是否小于右边值，如果是返回 True 否则返回 False。
>=	检查左边值是否大于等于右边值，如果是返回 True 否则返回 False。
<=	检查左边值是否小于等于右边值，如果是返回 True 否则返回 False。

&&	逻辑 AND 运算符。 如果两边的操作数都是 True，则条件 True，否则为 False。
||	逻辑 OR 运算符。 如果两边的操作数有一个 True，则条件 True，否则为 False。
!	逻辑 NOT 运算符。 如果条件为 True，则逻辑 NOT 条件 False，否则为 True。



p	q	p & q	p | q	p ^ q
0	0	  0		  0		  0
0	1	  0		  1	      1
1	1	  1		  1	      0
1	0	  0       1	      1

&	按位与运算符"&"是双目运算符。 其功能是参与运算的两数各对应的二进位相与。
|	按位或运算符"|"是双目运算符。 其功能是参与运算的两数各对应的二进位相或
^	按位异或运算符"^"是双目运算符。 其功能是参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为1。
<<	左移运算符"<<"是双目运算符。左移n位就是乘以2的n次方。 其功能把"<<"左边的运算数的各二进位全部左移若干位，由"<<"右边的数指定移动的位数，高位丢弃，低位补0。
>>	右移运算符">>"是双目运算符。右移n位就是除以2的n次方。 其功能是把">>"左边的运算数的各二进位全部右移若干位，">>"右边的数指定移动的位数。


运算符	描述	            实例
&	    返回变量存储地址	&a; 将给出变量的实际地址。
*	    指针变量。	    *a; 是一个指针变量
*/
func main() {
	var a = 4
	var b *int
	var c = &a
	fmt.Println(a, b, c, *c)
}
